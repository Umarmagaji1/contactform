{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContacts.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","Link","to","float","color","bind","Contacts","contacts_Contact","key","Header","branding","data-toggle","data-target","aria-controls","aria-expanded","aria-label","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classNames","is-invalid","prototype","PropTypes","string","isRequired","func","defaultProps","AddContacts","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","App","Context_Provider","BrowserRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kTAEMA,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IACvB,SAAAL,GAAO,OACLA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAIZ,QACE,OAAOP,IAGQa,6MACnBb,MAAQ,CACNK,SAAU,GACVS,SAAU,SAAAb,GAAM,OAAIc,EAAKC,SAAS,SAAAhB,GAAK,OAAID,EAAQC,EAAOC,wNAIxCgB,IAAMC,IAAI,qDAAtBC,SACNC,KAAKJ,SAAS,CACZX,SAAUc,EAAIE,0IAIhB,OACEC,EAAAC,EAAAC,cAAC5B,EAAQiB,SAAT,CAAkBY,MAAOL,KAAKpB,OAC3BoB,KAAKM,MAAMC,iBAfkBC,aAqBzBC,EAAWjC,EAAQiC,iBCyBjBC,6MAvEb9B,MAAQ,CACN+B,iBAAiB,KAEnBC,oDAAgB,SAAAC,EAAOzB,EAAIM,GAAX,OAAAoB,EAAAX,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENrB,IAAMsB,OAAN,8CAAA7B,OAA2DF,IAFrD,OAGZM,EAAS,CAAEZ,KAAM,iBAAkBO,QAASD,IAHhC4B,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKZtB,EAAS,CAAEZ,KAAM,iBAAkBO,QAASD,IALhC,wBAAA4B,EAAAK,SAAAR,EAAAb,KAAA,4IASP,IAAAsB,EAAAtB,KAAAuB,EAC4BvB,KAAKM,MAAMnB,QAAtCC,EADDmC,EACCnC,GAAIoC,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBf,EAAoBX,KAAKpB,MAAzB+B,gBACR,OACET,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,0BACbzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,eACXH,EAAM,IACPtB,EAAAC,EAAAC,cAAA,KACEwB,QAAS,WACPN,EAAK1B,SAAS,CACZe,iBAAkBW,EAAK1C,MAAM+B,mBAGjCgB,UAAU,kBACVE,MAAO,CAAEC,OAAQ,aAEnB5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAE,kBAAA1C,OAAoBF,IAC1Bc,EAAAC,EAAAC,cAAA,KACEuB,UAAU,eACVE,MAAO,CACLC,OAAQ,UACRG,MAAO,QACPC,MAAO,YAIbhC,EAAAC,EAAAC,cAAA,KACEwB,QAASN,EAAKV,cAAcuB,KAAKb,EAAMlC,EAAIM,GAC3CiC,UAAU,cACVE,MAAO,CAAEC,OAAQ,UAAWG,MAAO,QAASC,MAAO,UAGtDvB,EACCT,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,cACZzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBAAd,SAEGF,GAEHvB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBAAd,SAEGD,IAGH,eA5DIlB,aCmBP4B,mLApBX,OACElC,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACApB,EAAaoB,EAAbpB,SACR,OACEiB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,aACbzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,aACZzB,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,eAAhB,WADF,SAGC1C,EAASO,IAAI,SAAAL,GAAO,OACnBe,EAAAC,EAAAC,cAACiC,EAAD,CAASC,IAAKnD,EAAQC,GAAID,QAASA,gBAZ5BqB,aC6CR+B,EA5CA,SAAAjC,GAAS,IACdkC,EAAalC,EAAbkC,SACR,OACEtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,sDACbzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,aACbzB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,IAAIL,UAAU,gBACpBa,GAEHtC,EAAAC,EAAAC,cAAA,UACEuB,UAAU,iBACV7C,KAAK,SACL2D,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEX3C,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,yBAElBzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,2BAA2BvC,GAAG,aAC3Cc,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,sBACZzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,mBACZzB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,IAAIL,UAAU,gBACrBzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,eADf,SAGAzB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,gBAAgBL,UAAU,gBACjCzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,eADf,QAGAzB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMC,GAAG,SAASL,UAAU,gBAC1BzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,mBADf,0DC7BVmB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAxB,EAMIuB,EANJvB,KACAyB,EAKIF,EALJE,YACA5C,EAII0C,EAJJ1C,MACAvB,EAGIiE,EAHJjE,KACAoE,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEjD,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,cACbzB,EAAAC,EAAAC,cAAA,SAAOgD,QAAS5B,GAAOwB,GACvB9C,EAAAC,EAAAC,cAAA,SACEtB,KAAMA,EACN0C,KAAMA,EACNG,UAAW0B,IAAW,eAAgB,CACpCC,aAAcH,IAEhBF,YAAaA,EACb5C,MAAOA,EACP6C,SAAUA,EACVC,MAAOA,IAERA,GAASjD,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,oBAAoBwB,KAKnDL,EAAeS,UAAY,CACzBP,MAAOQ,IAAUC,OAAOC,WACxBlC,KAAMgC,IAAUC,OAAOC,WACvBT,YAAaO,IAAUC,OAAOC,WAC9BrD,MAAOmD,IAAUC,OAAOC,WACxB5E,KAAM0E,IAAUC,OAAOC,WACvBR,SAAUM,IAAUG,KAAKD,YAG3BZ,EAAec,aAAe,CAC5B9E,KAAM,QAGOgE,QC2DAe,6MAnGbjF,MAAQ,CACN4C,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,MAEVC,+CAAW,SAAAlD,EAAOnB,EAAUsE,GAAjB,IAAAC,EAAAzC,EAAAC,EAAAC,EAAAwC,EAAAnE,EAAA,OAAAe,EAAAX,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT8C,EAAEG,iBADOF,EAEsBtE,EAAKf,MAA5B4C,EAFCyC,EAEDzC,KAAMC,EAFLwC,EAEKxC,MAAOC,EAFZuC,EAEYvC,MAGR,KAATF,EALK,CAAAR,EAAAE,KAAA,eAMPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAEtC,KAAM,sBANzBR,EAAAoD,OAAA,oBASK,KAAV3C,EATK,CAAAT,EAAAE,KAAA,eAUPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAErC,MAAO,uBAV1BT,EAAAoD,OAAA,oBAaK,KAAV1C,EAbK,CAAAV,EAAAE,KAAA,gBAcPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAEpC,MAAO,uBAd1BV,EAAAoD,OAAA,yBAiBHF,EAAa,CACjB1C,OACAC,QACAC,SApBOV,EAAAE,KAAA,GAsBSrB,IAAMwE,KACtB,6CACAH,GAxBO,QAsBHnE,EAtBGiB,EAAAsD,KA0BT5E,EAAS,CAAEZ,KAAM,cAAeO,QAASU,EAAIE,OAC7CN,EAAKC,SAAS,CACZ4B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,KAEVnE,EAAKW,MAAMiE,QAAQC,KAAK,KAjCf,yBAAAxD,EAAAK,SAAAR,EAAAb,mEAoCXkD,SAAW,SAAAc,GACTrE,EAAKC,SAALb,OAAA0F,EAAA,EAAA1F,CAAA,GAAiBiF,EAAEU,OAAOlD,KAAOwC,EAAEU,OAAOrE,iFAGnC,IAAAiB,EAAAtB,KAAA2E,EACgC3E,KAAKpB,MAApC4C,EADDmD,EACCnD,KAAMC,EADPkD,EACOlD,MAAOC,EADdiD,EACcjD,MAAOoC,EADrBa,EACqBb,OAC5B,OACE5D,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,aACbzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,cACbzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,cAAd,eACAzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,gBACbzB,EAAAC,EAAAC,cAAA,QAAM2D,SAAUzC,EAAKyC,SAAS5B,KAAKb,EAAM5B,IACvCQ,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,OACNxB,KAAK,OACLyB,YAAY,gBACZ5C,MAAOmB,EACP1C,KAAK,OACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOtC,OAEhBtB,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,QACNxB,KAAK,QACLyB,YAAY,iBACZ5C,MAAOoB,EACP3C,KAAK,QACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOrC,QAEhBvB,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,QACNxB,KAAK,QACLyB,YAAY,iBACZ5C,MAAOqB,EACP5C,KAAK,OACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOpC,QAEhBxB,EAAAC,EAAAC,cAAA,UAAQtB,KAAK,SAAS6C,UAAU,2BAAhC,uBAtFMnB,aC+GXqE,6MA9GbjG,MAAQ,CACN4C,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,MAgBVC,+CAAW,SAAAlD,EAAOnB,EAAUsE,GAAjB,IAAAC,EAAAzC,EAAAC,EAAAC,EAAAoD,EAAA1F,EAAAW,EAAA,OAAAe,EAAAX,EAAAY,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT8C,EAAEG,iBADOF,EAEsBtE,EAAKf,MAA5B4C,EAFCyC,EAEDzC,KAAMC,EAFLwC,EAEKxC,MAAOC,EAFZuC,EAEYvC,MAGR,KAATF,EALK,CAAAR,EAAAE,KAAA,eAMPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAEtC,KAAM,sBANzBR,EAAAoD,OAAA,oBASK,KAAV3C,EATK,CAAAT,EAAAE,KAAA,eAUPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAErC,MAAO,uBAV1BT,EAAAoD,OAAA,oBAaK,KAAV1C,EAbK,CAAAV,EAAAE,KAAA,gBAcPvB,EAAKC,SAAS,CAAEkE,OAAQ,CAAEpC,MAAO,uBAd1BV,EAAAoD,OAAA,yBAkBHU,EAAa,CACjBtD,OACAC,QACAC,SAEMtC,EAAOO,EAAKW,MAAMyE,MAAMC,OAAxB5F,GAvBC4B,EAAAE,KAAA,GAwBSrB,IAAMoF,IAAN,8CAAA3F,OAC8BF,GAC9C0F,GA1BO,QAwBH/E,EAxBGiB,EAAAsD,KA4BT5E,EAAS,CAAEZ,KAAM,iBAAkBO,QAASU,EAAIE,OAEhDN,EAAKW,MAAMiE,QAAQC,KAAK,KA9Bf,yBAAAxD,EAAAK,SAAAR,EAAAb,mEAiCXkD,SAAW,SAAAc,GACTrE,EAAKC,SAALb,OAAA0F,EAAA,EAAA1F,CAAA,GAAiBiF,EAAEU,OAAOlD,KAAOwC,EAAEU,OAAOrE,qNA9ClCjB,EAAOY,KAAKM,MAAMyE,MAAMC,OAAxB5F,YAEUS,IAAMC,IAAN,8CAAAR,OAC8BF,WAD1CW,SAGAZ,EAAUY,EAAIE,KACpBD,KAAKJ,SAAS,CACZ4B,KAAMrC,EAAQqC,KACdC,MAAOtC,EAAQsC,MACfC,MAAOvC,EAAQuC,2IAwCV,IAAAJ,EAAAtB,KAAA2E,EACgC3E,KAAKpB,MAApC4C,EADDmD,EACCnD,KAAMC,EADPkD,EACOlD,MAAOC,EADdiD,EACcjD,MAAOoC,EADrBa,EACqBb,OAC5B,OACE5D,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,aACbzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,cACbzB,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,cAAd,gBACAzB,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,gBACbzB,EAAAC,EAAAC,cAAA,QAAM2D,SAAUzC,EAAKyC,SAAS5B,KAAKb,EAAM5B,IACvCQ,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,OACNxB,KAAK,OACLyB,YAAY,gBACZ5C,MAAOmB,EACP1C,KAAK,OACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOtC,OAEhBtB,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,QACNxB,KAAK,QACLyB,YAAY,iBACZ5C,MAAOoB,EACP3C,KAAK,QACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOrC,QAEhBvB,EAAAC,EAAAC,cAACwE,EAAD,CACE5B,MAAM,QACNxB,KAAK,QACLyB,YAAY,iBACZ5C,MAAOqB,EACP5C,KAAK,OACLoE,SAAU5B,EAAK4B,SACfC,MAAOW,EAAOpC,QAEhBxB,EAAAC,EAAAC,cAAA,UAAQtB,KAAK,SAAS6C,UAAU,2BAAhC,uBAjGMnB,aCQX0E,EAVD,WACZ,OACEhF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,aAAd,sBACAzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,QAAb,kCACAzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,kBAAb,mBCMSwD,EAXE,WACf,OACEjF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIuB,UAAU,aACZzB,EAAAC,EAAAC,cAAA,QAAMuB,UAAU,eAAhB,OADF,mBAGAzB,EAAAC,EAAAC,cAAA,KAAGuB,UAAU,QAAb,+BCISyD,mLARX,OACElF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCAJWI,aCgCJ6E,0LApBX,OACEnF,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,OACbzB,EAAAC,EAAAC,cAACoF,EAAD,CAAQhD,SAAS,oBACjBtC,EAAAC,EAAAC,cAACqF,EAAA,EAAD,KACEvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACjClC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWhC,IAC7C3D,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,UAAWhB,IAClD3E,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWX,IACtChF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWT,IACrClF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOG,UAAWV,eAbd3E,cCAEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCbNmB,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c52854b4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact =>\r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-content mb-2\">\r\n              <h2 className=\"card-header\">\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    });\r\n                  }}\r\n                  className=\"fa fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <Link to={`/contacts/edit/${id}`}>\r\n                  <i\r\n                    className=\"fa fa-pencil\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fa fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n              </h2>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Email:\r\n                    {email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Phone:\r\n                    {phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-danger mb-3\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                  <i className=\"fa fa-home\" /> Home\r\n                </Link>\r\n                <Link to=\"/contacts/add\" className=\"navbar-brand\">\r\n                  <i className=\"fa fa-plus\" /> Add\r\n                </Link>\r\n                <Link to=\"/about\" className=\"navbar-brand\">\r\n                  <i className=\"fa fa-question\" /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classNames(\"form-control\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={error}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.prototype = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass AddContacts extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\"\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: \"\"\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"card  mb-2\">\r\n                <h3 className=\"card-title\">Add Contact</h3>\r\n                <div className=\"card-content\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      type=\"text\"\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter email...\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter phone...\"\r\n                      value={phone}\r\n                      type=\"text\"\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-light btn-block\">\r\n                      Submit\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContacts;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"card  mb-2\">\r\n                <h3 className=\"card-title\">Edit Contact</h3>\r\n                <div className=\"card-content\">\r\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                    <TextInputGroup\r\n                      label=\"Name\"\r\n                      name=\"name\"\r\n                      placeholder=\"Enter Name...\"\r\n                      value={name}\r\n                      type=\"text\"\r\n                      onChange={this.onChange}\r\n                      error={errors.name}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Enter email...\"\r\n                      value={email}\r\n                      type=\"email\"\r\n                      onChange={this.onChange}\r\n                      error={errors.email}\r\n                    />\r\n                    <TextInputGroup\r\n                      label=\"Phone\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Enter phone...\"\r\n                      value={phone}\r\n                      type=\"text\"\r\n                      onChange={this.onChange}\r\n                      error={errors.phone}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-light btn-block\">\r\n                      Update\r\n                    </button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"display-4\">About Contact List</h2>\r\n      <p className=\"lead\">A simple app to manage contact</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContacts from \"./components/contacts/AddContacts\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport \"./App.css\";\nimport Provider from \"./Context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContacts} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}